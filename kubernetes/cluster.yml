# apiVersion: mysql.oracle.com/v1alpha1
# kind: Cluster
# metadata:
#   name: my-app-db
#   namespace: my-namespace
apiVersion: v1
kind: Secret
metadata:
  name: mysql-pass 
type: Opaque
data:
  password: cGFzc3dvcmQ=
---
# apiVersion: v1
# kind: PersistentVolume
# metadata:
#   labels:
#     type: local
#   name: mysql-local-backup-volume
# spec:
#   accessModes:
#   - ReadWriteMany
#   capacity:
#     storage: 5Gi
#   hostPath:
#     path: /home/janmejaya_swain/data
#   persistentVolumeReclaimPolicy: Recycle
#   storageClassName: manual
# ---
# apiVersion: mysql.oracle.com/v1alpha1
# kind: Cluster
# metadata:
#   name: mysql-cluster
# spec:
#   members: 1
#   rootPasswordSecret:
#     name: mysql-pass
#   volumeClaimTemplate:
#     metadata:
#       name: data
#     spec:
#       storageClassName: manual
#       accessModes:
#         - ReadWriteMany
#       resources:
#         requests:
#           storage: 1Gi
#   # backupVolumeClaimTemplate:
#   #   metadata:
#   #     name: backup-data
#   #   spec:
#   #     storageClassName: manual
#   #     accessModes:
#   #       - ReadWriteMany
#   #     resources:
#   #       requests:
#   #         storage: 1Gi
# ---
apiVersion: mysql.oracle.com/v1alpha1
kind: Cluster
metadata:
  name: mysql-cluster 
spec:
  members: 1
  rootPasswordSecret:
    name: mysql-pass
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-volumeclaim 
  labels:
    app: wordpress
spec:
  #storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: wordpress
  name: wordpress
spec:
  type: LoadBalancer #ClusterIP # LoadBalancer
  ports:
    - port:  80
      targetPort: 80
      protocol: TCP
  selector:
    app: wordpress
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
        - image: jjswain2018/wisdmlabs-nginx-php7.2-wordpress:v04
          name: wordpress
          env:
          - name: URL
            value: testwisdm.com
          - name: TITLE
            value: OH_MY_GOD_BLESS_WISDMLABS_PHP7.2
          - name: USER
            value: user1
          - name: EMAIL
            value: devops@gmail.com
          - name: PASSWORD
            value: password
          - name: MYSQL_DB_HOST
            value: mysql-cluster-0.mysql-cluster.default.svc.cluster.local #mysql-connect , this line not required 
          - name: WORDPRESS_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-pass 
                key:  password
          # - name: REDIS_HOST
          #   value: redis-connect       
          ports:
            - containerPort: 80
              name: wordpress
          readinessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20 
          volumeMounts:
          - name: wordpress-persistent-storage
             # mountPath: /var/www/html
            mountPath: /usr/share/nginx/www 
          resources:
            requests:
              cpu: 200m
      initContainers:
      - name: install
        image: jjswain2018/wisdmlabs-nginx-php7.2-wordpress:v04
        command: ["/bin/bash", "-c",
                 "cp -rf * /usr/share/nginx/html"]
        env:
          - name: MYSQL_DB_HOST
            value: mysql-cluster-0.mysql-cluster.default.svc.cluster.local  #mysql-connect , this line not required
          - name: WORDPRESS_DB_PASSWORD 
            valueFrom:
              secretKeyRef:
                name: mysql-pass 
                key:  password
        # command: ["/bin/bash", "-c",
        #          "cp -rf * /usr/share/nginx/html",
        #           "wp --allow-root core install  --url=testwp.com --title=DEVOPS-Wisdm --admin_user=anyuser --admin_password=password --admin_email=devops@gmail.com"]
        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: "/usr/share/nginx/html"
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
            claimName: wordpress-volumeclaim
      # volumes:
      # - name: wordpress-persistent-storage
      #   persistentVolumeClaim:
      #       claimName: stash-recovered
        
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: redis-connect 
#   labels:
#     app: redis
# spec:
#   type: ClusterIP
#   ports:
#     - port: 6379
#   selector:
#     app: redis
# ---
# apiVersion: extensions/v1beta1
# kind: Deployment
# metadata:
#   name: redis-connect
#   labels:
#     app: redis
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: redis
#   template:
#     metadata:
#       labels:
#         app: redis
#     spec:
#       containers:
#         - image: bitnami/redis:4.0.11
#           name: redis
#           env:
#           - name: ALLOW_EMPTY_PASSWORD
#             value: "yes" 
#             # - name: MYSQL_ROOT_PASSWORD
#             #   valueFrom:
#             #     secretKeyRef:
#             #       name: mysql-pass
#             #       key:  password 
#           ports:
#             - containerPort: 6379
#               name: redis
#           readinessProbe:
#             tcpSocket:
#               port: 6379
#             initialDelaySeconds: 50
#             periodSeconds: 100
#           livenessProbe:
#             tcpSocket:
#               port: 6379
#             initialDelaySeconds: 150
#             periodSeconds: 200 
#       #     volumeMounts:
#       #       - name: mysql-persistent-storage
#       #         mountPath: /var/lib/mysql
#       #      #   mountPath: /usr/share/nginx/www
#       # volumes:
#       #   - name: mysql-persistent-storage
#       #     persistentVolumeClaim:
#       #        claimName: mysql-volumeclaim